//--------------------------------------------------------
//파일명 : udp_daytime.c
//기능 : daytime 서비스를 요청하는 UDP(비연결형) 클라이언트
//컴파일 : cc -o udp_daytime udp_daytime.c
//사용법 : udp_daytime css.skuniv.ac.kr 9999
//--------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <errno.h>

#define MAXLINE 127

int main(int argc, char *argv[])
{
        struct sockaddr_in servaddr;
        int s, nbyte, addrlen = sizeof(servaddr);
        char buf[MAXLINE+1];
        struct hostent *hp;

        if(argc != 3) {
                printf("Usage: %s hostname portnumber\n", argv[0]);
                exit(0);
        }

        //소켓 생성
        if((s=socket(PF_INET, SOCK_DGRAM, 0)) < 0) {
                perror("socket fail");
                exit(1);
        }

        hp = gethostbyname(argv[1]);
        if(hp==NULL){
                perror("gethostbyname fail");
                exit(0);
        }

        //에코서버의 소켓구조 구조체 작성
        bzero((char *)&servaddr, sizeof(servaddr));
        servaddr.sin_family = AF_INET;
        inet_pton(AF_INET, argv[1], &servaddr.sin_addr);
        servaddr.sin_port = htons(atoi(argv[2]));

        //에코 서버로 메시지 송신
        if(sendto(s, buf, strlen(buf), 0, (struct sockaddr*)&servaddr, addrlen) < 0) {
                perror("sendto fail");
                exit(0);
        }

        //서버가 보내오는 daytime 데이터의 수신 및 화면출력
        if((nbyte = recvfrom(s, buf, MAXLINE, 0, (struct sockaddr*)&servaddr, &addrlen)) < 0) {
                perror("read fail");
                exit(1);
        }
        buf[nbyte] = 0;
        printf("%s", buf);
        close(s);
        return 0;
}
