//--------------------------------------------------------
//파일명 : tcp_echoli2.c
//기능 : 에코 서비스를 요청하는 TCP(연결형) 클라이언트
//컴파일 : cc -o tcp_echoli2 tcp_echoli2.c
//사용법 : tcp_echoli2 host이름  port번호
//--------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <errno.h>

#define MAXLINE 127

int main(int argc, char *argv[])
{
        struct sockaddr_in servaddr;
        struct hostent *hp;
        struct in_addr in;
        int s, nbyte, i;
        int port;
        char buf[MAXLINE+1];
        char buf2[20];

        if(argc != 3) {
                printf("Usage: %s hostname  portnumber\n", argv[0]);
                exit(0);
        }

        //소켓 생성
        if((s=socket(PF_INET, SOCK_STREAM, 0)) < 0) {
                perror("socket fail");
                exit(0);
        }

        port = atoi(argv[2]);
        printf("%s\n", argv[1]);

        hp = gethostbyname(argv[1]);
        if(hp==NULL){
                perror("gethostbyname fail");
                exit(0);
        }

        for(i=0;hp->h_addr_list[i];i++){
        memcpy(&in.s_addr, hp->h_addr_list[i], sizeof(in.s_addr));
                inet_ntop(AF_INET, &in, buf2, sizeof(buf));
                printf("Server IP: %s\n", buf2);
        }

        //에코서버의 소켓주소 구조체 작성
        bzero((char *)&servaddr, sizeof(servaddr));
        servaddr.sin_family = AF_INET;
        inet_pton(AF_INET, argv[1], &servaddr.sin_addr);
        servaddr.sin_port = htons(port);

        //연결 요청
        if(connect(s, (struct sockaddr *)&servaddr, sizeof(servaddr)) < 0) {
                perror("connect fail");
                exit(0);
        }

        printf("입력: ");
        if(fgets(buf, sizeof(buf), stdin) == NULL)
                exit(0);
        nbyte = strlen(buf);
        //에코 서버로 메세지 송신
        if(write(s, buf, nbyte) < 0) {
                printf("write error\n");
                exit(0);
        }

        //수신된 에코 데이터 화면 출력
        printf("수신: ");
        if((nbyte=read(s, buf, MAXLINE)) < 0) {
                perror("read fail");
                exit(0);
        }
        buf[nbyte] = 0;
        printf("%s", buf);
        close(s);
        return 0;
}
